apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portfolio-app.fullname" . }}-backend
  labels:
    {{- include "portfolio-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ include "portfolio-app.name" . }}-backend
  template:
    metadata:
      labels:
        app: {{ include "portfolio-app.name" . }}-backend
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.port }}
              name: http
          env:
            - name: NODE_ENV
              value: "production"
          livenessProbe:
            httpGet:
              path: "{{ .Values.backend.livenessProbePath }}"
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "{{ .Values.backend.readinessProbePath }}"
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: backend-data
              mountPath: /app/data
      volumes:
        - name: backend-data
          emptyDir: {}